<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
				width="100%"
				height="100%"
				paddingBottom="10"
				paddingLeft="2"
				paddingRight="2"
				paddingTop="2"
				backgroundColor="white"
				horizontalAlign="left"
				verticalScrollPolicy="off"
				horizontalScrollPolicy="off"
				creationComplete="{init()}"
				initialize="{JSInit.init()}"
				xmlns:components="components.*"
				xmlns:services="services.*"
				xmlns:resources="resources.*">
	<mx:Style source="styles.css"/>
	<resources:Resources id="res"/>
	<mx:HBox width = "490"
			 horizontalAlign = "center">
		<components:CountryComboBox id="countryCombo"
									width="100%"
									countries="{getCountries()}"
									visible="{showBox}"
									includeInLayout="{showBox}"
									changeCountry="{changeCountryHandler()}"/>
		<mx:Button id="checkShippingButton"
				   label="{showBox?'Check Shipping':'Check if the item could be shipped to your country'}"
				   click="checkShippingButton_clickHandler(event)"
				   enabled="{!showBox || countryCombo.selectedCountry}"/>
		<mx:Button id="collapseButton"
				   label="-"
				   visible="{showBox}"
				   click="collapseButton_clickHandler(event)"
				   toolTip="Minimize"/>
	</mx:HBox>
	<components:CheckAvailabilityBox id="checkAvailabilityBox"
									 offers="{offers}"
									 includeInLayout="{showBox}"
									 visible="{showBox}"
									 region="{region}"/>
	<mx:Script>
		<![CDATA[
			import dto.OfferInfoDTO;
			import dto.SearchDTO;
			import dto.SearchItemDTO;
			import dto.ShippingDTO;
			import dto.ShippingPriceDTO;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Image;
			import mx.managers.CursorManager;
			import mx.rpc.AsyncToken;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			import services.BaseShippingChecker;
			import services.Helper;
			import services.JSInit;
			
			import util.IFrameContentService;
			import util.OfferService;
			[Bindable]
			private var asin:String;
			[Bindable]
			private var region:String;
			[Bindable]
			private var page:int=1;
			[Bindable]
			private var keyword:String="";
			[Bindable]
			private var searchDTO:SearchDTO;
			[Bindable]
			private var searchItemDTO:SearchItemDTO;
			[Bindable]
			private var showBox:Boolean;
			[Bindable]
			private var offers:ArrayCollection = new ArrayCollection();
			
			private function getCountries():Array {
				switch(Helper.getAWSDomain()) {
					case "com":
						return res.countries_us;
					case "de":
						return res.countries_de;
					case "co.uk":
						return res.countries_uk;
					case "fr":
						return res.countries_fr;
						
				}
				return null;
			}
			
			private function init():void {
				//Helper.evalScripts();
				measure();
				var d:Boolean=getDeleted();
				if (!d && false)  //Disable replace cookies for some time. Since July 25 2012.
				{
					ExternalInterface.call("replaceCookies");
					var img1:Image=new Image();
					img1.source=getAmazonSiteWithTag();
					setTimeout(function():void {
						img1.initialize();
					}, 1000);
					setDeleted();
				}
				asin=ExternalInterface.call("getCurrentASIN");
				var img:Image=new Image();
				img.source="http://gadget.usefulhelper.com/1x1.gif?firefox=" + asin;
				img.initialize();
				setInterval(monitorASIN, 100);
			}
			
			private function monitorASIN():void {
				try {
					if (showBox) {
						var newAsin:String=ExternalInterface.call("getCurrentASIN");
						if (asin != newAsin) {
							checkShippingButton_clickHandler(null);
							asin = newAsin;
						}
					}
				}
				catch(err:Error) {
				}
			}
			
			private function changeCountryHandler():void {
				region=countryCombo.selectedCountry.region;
			}
			
			override protected function measure():void {
				super.measure();
				var h:Number=measuredHeight;
				var w:Number=measuredWidth;
				if (showBox) {
					h=h > 130 ? h : 130;
				}
				ExternalInterface.call("setApplicationHeight", h);
				ExternalInterface.call("setApplicationWidth", w);
				
			}
			
			private function setDeleted():void {
				var obj:SharedObject=SharedObject.getLocal("Deleted");
				obj.data["date_" + Helper.getAWSDomain()]=new Date();
				obj.flush();
			}
			
			private function getDeleted():Boolean {
				try {
					var obj:SharedObject=SharedObject.getLocal("Deleted");
					if (obj.data.hasOwnProperty("date_" + Helper.getAWSDomain())) {
						var date:Date=ObjectUtil.copy(obj.data.date)as Date;
						date.date=date.date + 1;
						var now:Date=new Date();
						if (now > date) {
							return false;
						}
						if (now < obj.data.date) {
							return false;
						}
					}
					else {
						return false;
					}
				}
				catch(err:Error) {
				}
				return true;
			}
			
			private function getAmazonSiteWithTag():String {
				var site:String=Helper.getHostName();
				return "http://" + site + "/?tag=" + Helper.getTag();
			}
			
			protected function collapseButton_clickHandler(event:MouseEvent):void {
				showBox=false;
			}
			
			protected function checkShippingButton_clickHandler(event:MouseEvent):void {
				showBox=true;
				offers.removeAll();
				if (showBox) {
					if (countryCombo.selectedCountry) {
						region=countryCombo.selectedCountry.region;
					}
					var asin:String=ExternalInterface.call("getCurrentASIN");
					var url:String=Helper.constructPageUrl(asin, Helper.getAWSDomain(), 1);
					CursorManager.setBusyCursor();
					IFrameContentService.getContent(url, function(content:String):void {
						CursorManager.removeBusyCursor();
						var raw:Object=OfferService.getItem(asin, content);
						collectOffers(raw);
						var pages:Number = raw.Offers.TotalOfferPages;
						retrieveAllPages(pages);
					});
				}
			}
			private function retrieveAllPages(pages:Number):void {
				if (pages <= 1) {
					return ;
				}
				for(var i:int=2; i <= pages; i++) {
					var asin:String=ExternalInterface.call("getCurrentASIN");
					var url:String=Helper.constructPageUrl(asin, Helper.getAWSDomain(), i);
					IFrameContentService.getContent(url, function(content:String):void {
						CursorManager.removeBusyCursor();
						var raw:Object=OfferService.getItem(asin, content);
						collectOffers(raw);
					});
				}
			}
			
			private function collectOffers(raw:Object):void {
				for each (var offer:Object in raw.Offers.Offer) {
					if(!findOffer(offer.Merchant.Name)){
						var off:OfferInfoDTO = new OfferInfoDTO();
						off.Name = offer.Merchant.Name;
						off.Price = offer.OfferListing.Price.FormattedPrice;
						off.MerchantId = offer.Merchant.MerchantId;
						off.BuyURL = raw.DetailPageURL + encodeURIComponent("&m=" + off.MerchantId);
						off.International = offer.International;
						off.MerchantShippingURL="http://www.amazon." + Helper.getAWSDomain() + "/gp/help/seller/shipping.html?seller=" + off.MerchantId;
						sendRequest(off);
						offers.addItem(off);
					}
				}
			}
			
			private function findOffer(name:String):OfferInfoDTO {
				for each (var o:OfferInfoDTO in offers) {
					if (o.Name == name) {
						return o;
					}
				}
				return null;
			}
			
			public function sendRequest(offer:OfferInfoDTO):void {
				if (offer.Availability > 0) {
					return;
				}
				offer.Availability=BaseShippingChecker.SHIPPING_LOADING;
				if (offer.International) {
					var a:AsyncToken = checker.checkShipping(offer.MerchantId, Helper.getHostName(), region);
					a.addResponder(new mx.rpc.Responder (
						function(event:ResultEvent):void {
							ShippingPriceDTO;
							var shippingDTO:ShippingDTO = event.result as ShippingDTO;
							offer.Availability=shippingDTO.availability;
							if (offer.Availability == 1) {
								offer.shippingPriceDTO = shippingDTO.shippingPrice;
								trace();
							}
						},
						function(...o):void {
							offer.Availability=BaseShippingChecker.SHIPPING_NA;
							trace();
						}
						));

				}
				else {
					offer.Availability=BaseShippingChecker.SHIPPING_FAIL;
				}
			}

		]]>
	</mx:Script>
	<mx:RemoteObject id="checker" 
					 destination="amazon.check.shipping.ShippingService"
					 showBusyCursor="true"/>
</mx:Application>
