<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:browser="components.browser.*"
		  xmlns:components="components.*"
		  xmlns:datas="datas.*"
		  width="100%"
		  height="100%"
		  gap="0"
		  addedToStage="addedToStageHandler(event)"
		  creationComplete="creationCompleteHandler(event)" xmlns:metadata="org.osmf.metadata.*">
	<fx:Metadata>
		[Event (name="checkShipping", type="flash.events.Event")]
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import datas.UrlData;
			
			[Embed(source='assets/loading1.gif', mimeType='application/octet-stream')]
			public static var LOADING : Class;
			[Bindable]
			public var currentUrlData:UrlData;
			protected function goButton_clickHandler(event:MouseEvent):void {
				if (currentUrlData && currentUrlData.loading) {
					webViewUIComponent.stageWebView.stop();
				} else {
					var url:String = urlTextInput.text;
					if (validateUrl(url)) {
						url = adjustUrl(url);
						var d:UrlData = new UrlData();
						d.url = url;
						//dataProviderCollection.addItemAt(d, dataProviderCollection.length - 1);
						currentUrlData = d;
					}
				}
			}
			private function validateUrl(url:String):Boolean {
				return true;
			}
			private function adjustUrl(url:String):String {
				if (url.indexOf("://")==-1) {
					url = "http://" + url;
				}
				return url;
			}
			private function urlGroupVisible(...o):Object {
				return true;//currentUrlData.label == "Add";
			}
			public function webViewVisible(urlData:UrlData, ...o):Boolean	{
				return currentUrlData == urlData;
			}
			protected function addedToStageHandler(event:Event):void {
				//Utils.addStats(this.stage);
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				currentUrlData = dataProviderCollection.getItemAt(0) as UrlData;
			}
			
			protected function checkShippingButton_clickHandler(event:MouseEvent):void {
				dispatchEvent(new Event("checkShipping"));
			}
			
			protected function backButton_clickHandler(event:MouseEvent):void {
				webViewUIComponent.stageWebView.historyBack();
			}
			
			protected function forwardButton_clickHandler(event:MouseEvent):void {
				webViewUIComponent.stageWebView.historyForward();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:ArrayCollection id="dataProviderCollection">
			<datas:UrlData label="Add"/>
		</s:ArrayCollection>
	</fx:Declarations>
	<s:HGroup id="urlGroup"
			  width="100%"
			  visible="{urlGroupVisible(currentUrlData.label)}"
			  includeInLayout="{urlGroupVisible(currentUrlData.label)}"
			  verticalAlign="middle">
		<s:Button id="backButton"
				  label="&lt;"
				  height="{urlTextInput.height}"
				  click="backButton_clickHandler(event)"/>
		<s:Button id="forwardButton"
				  label="&gt;"
				  height="{urlTextInput.height}"
				  click="forwardButton_clickHandler(event)"/>
		<s:TextInput id="urlTextInput"
							  text="{currentUrlData.url}"
							  width="100%"/>
		<components:GIFPlayerComponent byteArray="{new LOADING}"
									   width="24"
									   height="24"
									   visible="{currentUrlData.loading}"
									   includeInLayout="{currentUrlData.loading}"/>
		<s:Button id="goButton"
				  label="{currentUrlData.loading?'X':'Go'}"
				  click="goButton_clickHandler(event)"
				  height="{urlTextInput.height}"/>
		<s:Button id="checkShippingButton"
				  label="Shipping"
				  click="checkShippingButton_clickHandler(event)"
				  height="{urlTextInput.height}"
				  enabled="{currentUrlData.asin != null}"
				  includeInLayout="{currentUrlData.asin != null}"
				  visible="{currentUrlData.asin != null}"/>
		
	</s:HGroup>
	<browser:StageWebViewUIComponent id="webViewUIComponent"
									 width="100%"
									 height="100%"
									 urlData="{currentUrlData}"
									 visible="{webViewVisible(currentUrlData, currentUrlData.label)}"
									 includeInLayout="{webViewVisible(currentUrlData, currentUrlData.label)}"/>
</s:VGroup>
