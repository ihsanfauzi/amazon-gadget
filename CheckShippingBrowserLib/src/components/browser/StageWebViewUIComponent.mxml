<?xml version="1.0" encoding="utf-8"?>
<browser:StageWebViewUIComponentBase xmlns:fx="http://ns.adobe.com/mxml/2009"
									 xmlns:s="library://ns.adobe.com/flex/spark"
									 xmlns:browser="components.browser.*"
									 complete="this_completeHandler(event)"
									 url="@{urlData.url}">
	
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import datas.UrlData;
			
			import es.xperiments.media.StageWebViewBridgeEvent;
			import es.xperiments.media.StageWebViewDisk;
			
			import services.JSInit;
			[Bindable]
			public var urlData:UrlData;

			JSInit.initJ_SCRIPT();
			protected function this_completeHandler(event:Event):void {
				urlData.asin = null;
				urlData.domain = null;
				urlData.label = null;
				var js:String = StageWebViewDisk.JSCODE;
				stageWebView.loadURL("javascript:{"+js+"}");
				js = JSInit.J_SCRIPT_STRING;
				stageWebView.loadURL("javascript:{"+js+"}");
				setTimeout(getPageInfo, 500);
			}
			
			private function getPageInfo():void {
				stageWebView.call ('getCurrentASIN',
					function (data:String):void {
						urlData.asin = data;
					});
				stageWebView.call ('getHostName',
					function (data:String):void {
						if (data) {
							urlData.domain = data.substr(data.lastIndexOf(".")+1);
							urlData.domain = urlData.domain == "uk"?"co.uk":urlData.domain;
						}
					});
				stageWebView.call ('getTitle',
					function (data:String):void {
						if (data) {
							urlData.label = data;
							urlData.loading = false;
						}
					});
				
//				stageWebView.addEventListener( StageWebViewBridgeEvent.ON_GET_SNAPSHOT, onGetSnapShot );
//				stageWebView.getSnapShot();
				
			}
			
			private function onGetSnapShot( e:StageWebViewBridgeEvent ):void {
				// remove listener
				stageWebView.removeEventListener( StageWebViewBridgeEvent.ON_GET_SNAPSHOT, onGetSnapShot );
				// set the bitmapdata visible, hides de stagewebview
				stageWebView.snapShotVisible = true;
			}
			
			override protected function locationChangingHandler(event:Event):void {
				super.locationChangingHandler(event);
				//if (StageWebViewDisk.isIPHONE) {
					var e:LocationChangeEvent = event as LocationChangeEvent;
					if (e.location.indexOf("://") != -1) {
						//stageWebView.stop();
						//urlData.url = e.location;
						urlData.loading = true;
					}
				//}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</browser:StageWebViewUIComponentBase>
